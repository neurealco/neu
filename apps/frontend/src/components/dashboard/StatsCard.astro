---
const { title, value, icon, usage } = Astro.props;
---

<div class="stats-card">
  <div class="stats-icon">{icon}</div>
  <div class="stats-content">
    <h3>{title}</h3>
    <div class="stats-value-container">
      <p class="stats-value">{value}</p>
      {usage && (
        <div class="usage-progress">
          <div 
            class="progress-bar" 
            style={`width: ${Math.min(100, (usage.current / usage.limit) * 100)}%`}
          ></div>
          <span class="usage-text">{usage.current}/{usage.limit}</span>
        </div>
      )}
    </div>
  </div>
</div>

<style>
  .stats-card {
    display: flex;
    align-items: center;
    padding: 20px;
    background: rgba(30, 41, 59, 0.7);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 12px;
    transition: all 0.3s;
  }

  .stats-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
  }

  .stats-icon {
    font-size: 2.5rem;
    margin-right: 20px;
  }

  .stats-content h3 {
    font-size: 1.1rem;
    margin-bottom: 5px;
    color: var(--text-secondary);
  }

  .stats-value-container {
    display: flex;
    flex-direction: column;
    gap: 10px;
  }

  .stats-value {
    font-size: 1.8rem;
    font-weight: 700;
  }

  .usage-progress {
    position: relative;
    height: 8px;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 4px;
    overflow: hidden;
  }

  .progress-bar {
    height: 100%;
    background: var(--primary);
    border-radius: 4px;
    transition: width 0.5s ease;
  }

  .usage-text {
    position: absolute;
    right: 0;
    top: -20px;
    font-size: 0.8rem;
    color: var(--text-secondary);
  }
</style>
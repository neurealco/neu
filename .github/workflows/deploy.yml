version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: apps/frontend/Dockerfile
    environment:
      - PUBLIC_API_BASE_URL=https://neureal.site/api
      - PUBLIC_SITE_URL=https://neureal.site
    networks:
      - neureal-net
    restart: unless-stopped

  backend:
    build:
      context: .
      dockerfile: apps/backend/Dockerfile
    env_file: 
      - apps/backend/.env
    networks:
      - neureal-net
    depends_on:
      - redis
    restart: unless-stopped

  redis:
    image: redis:alpine
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - redis-data:/data
    networks:
      - neureal-net
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/mime.types:/etc/nginx/mime.types:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:rw
    networks:
      - neureal-net
    restart: unless-stopped
    # Forzar el reinicio si falla
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 10s
      timeout: 5s
      retries: 3

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt:rw
      - ./certbot/www:/var/www/certbot:rw
    # Comando mejorado para renovaciones
    command: sh -c "while true; do sleep 12h; certbot renew; done;"
    networks:
      - neureal-net
    restart: unless-stopped

networks:
  neureal-net:
    driver: bridge
    # Configuraci√≥n IPAM fija para evitar conflictos
    ipam:
      driver: default
      config:
        - subnet: 172.22.0.0/16

volumes:
  redis-data: